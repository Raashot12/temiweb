name: Prod Deploy to AKS with Helm

on:
  push:
    branches:
      - main

permissions:
  id-token: write   # This is required for requesting the JWT for OIDC
  contents: read  
  
env:
  NAMESPACE: prod-${{ vars.NAMESPACE }}
  RESOURCE_GROUP: ${{ vars.CLUSTER_RG }}
  CLUSTER_NAME: ${{ vars.CLUSTER_NAME }}
  AZURE_CONTAINER_REGISTRY: ${{ vars.REGISTRY }}
  SERVICE: prod-${{ github.event.repository.name }}
  AZURE_REPOSITORY: ${{ github.event.repository.name }}
  BRANCH: ${{ github.head_ref || github.ref_name }}
  URL: ${{ vars.PROD_URL }}
  TLS: ${{ vars.PROD_TLS }}
jobs:
  buildImage:
    name: Build
    runs-on: ubuntu-latest
    environment:
      name: 'Testing'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Azure login
        uses: ./.github/workflows/actions/config/login-az
        with:
          clientId: ${{ secrets.AZURE_CLIENT_ID }}
          tenantId: ${{ secrets.AZURE_TENANT_ID }}
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          clusterName: ${{ env.CLUSTER_NAME }}
      - name: Get Environment Variables
        env:
          ENV: ${{ secrets.PROD_ENV }}
        run: |
          echo "$ENV" >> .env
      - name: Build, tag, and push image
        id: build-image
        env:
          AZURE_REGISTRY: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io 
        uses: ./.github/workflows/actions/build/az
        with:
          branch: ${{ env.BRANCH }}
          Repo: ${{ env.AZURE_REPOSITORY }}
          Registry: ${{ env.AZURE_REGISTRY }}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: buildImage
    environment:
      name: 'Testing'
      url: https://${{ env.URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Azure login
        uses: ./.github/workflows/actions/config/login-az
        with:
          clientId: ${{ secrets.AZURE_CLIENT_ID }}
          tenantId: ${{ secrets.AZURE_TENANT_ID }}
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          clusterName: ${{ env.CLUSTER_NAME }}
      - name: Deploy AKS Pod
        id: deploy_image
        uses: ./.github/workflows/actions/deploy/az
        with:
          branch: ${{ env.BRANCH }}
          Repo: ${{ env.AZURE_REPOSITORY }}
          Registry: ${{ env.AZURE_CONTAINER_REGISTRY }} 
          port: 3000
          healthPath: /
          replicas: 1
          CPULimits: 500m
          memoryLimits: 500Mi
          CPURequests: 250m
          memoryRequests: 300Mi
          appName: ${{ env.SERVICE }} 
          nameSpace: ${{ env.NAMESPACE }}
          hosts: ${{ env.URL }}
          secretName: ${{ env.TLS }}
          enableAutoscaling: true
      - name: Send Slack Notification
        id: send-notification
        uses: ./.github/workflows/actions/notification/successfulDeploy
        with:
          slack: ${{ secrets.SLACK_WEBHOOK_URL }}
  
  reusable-workflow:
    name: Notification
    needs: [buildImage, deploy]
    if: always()
    uses: plateaumed/reusable-workflows/.github/workflows/notify-slack.yaml@main
    with:
      user: ${{ github.actor }}
      buildResult: ${{ needs.buildImage.result }}
      deployResult: ${{ needs.deploy.result }}
      branch: ${{ github.base_ref || github.ref_name }}
      repository: ${{ github.event.repository.name }}
      run_id: ${{ github.run_id }}
    secrets:
      slack: ${{ secrets.SLACK_WEBHOOK_URL}}
